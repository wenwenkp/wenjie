{"version":3,"sources":["components/Navbar.jsx","components/Home.jsx","components/About.jsx","components/Projects.jsx","components/Contact.jsx","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","role","aria-haspopup","aria-labelledby","Home","name","aria-pressed","About","Projects","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sNAwCeA,G,UAtCA,WACb,OACE,6BACE,yBAAKC,UAAU,4DACb,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,UACA,4BAAQD,UAAU,iBAAiBE,KAAK,SAASC,cAAY,WAAWC,cAAY,qBAClFC,gBAAc,oBAAoBC,gBAAc,QAAQC,aAAW,qBACnE,0BAAMP,UAAU,yBAElB,yBAAKA,UAAU,2BAA2BQ,GAAG,qBAC3C,wBAAIR,UAAU,cACZ,wBAAIA,UAAU,mBACZ,uBAAGA,UAAU,WAAWC,KAAK,SAA7B,SAEF,wBAAID,UAAU,YACZ,uBAAGA,UAAU,WAAWC,KAAK,UAA7B,UAEF,wBAAID,UAAU,qBACZ,uBAAGA,UAAU,2BAA2BC,KAAK,YAAYO,GAAG,yBAAyBC,KAAK,SACxFN,cAAY,WAAWO,gBAAc,OAAOJ,gBAAc,SAD5D,YAIA,yBAAKN,UAAU,gBAAgBW,kBAAgB,0BAC7C,uBAAGX,UAAU,gBAAgBC,KAAK,KAAlC,UACA,uBAAGD,UAAU,gBAAgBC,KAAK,KAAlC,kBACA,uBAAGD,UAAU,gBAAgBC,KAAK,KAAlC,yBAGJ,wBAAID,UAAU,YACZ,uBAAGA,UAAU,WAAWC,KAAK,YAA7B,qBCACW,EA7BF,WACT,OACI,yBAAKZ,UAAU,QACX,yBAAKA,UAAU,cACX,uBAAGa,KAAK,SACR,wBAAIb,UAAU,iBAAd,6BAGA,6BAASA,UAAU,mBAAnB,+BAGA,wBAAIA,UAAU,iBAAd,+BAGA,6BAASA,UAAU,mBAAnB,0CAGA,wBAAIA,UAAU,iBAAd,4BAGA,6BAASA,UAAU,mBAAnB,iBAGA,uBAAGC,KAAK,SAASD,UAAU,yBAAyBS,KAAK,SAASK,eAAa,QAA/E,mBCEDC,EAzBD,WACV,OAEI,yBAAKf,UAAU,SACX,uBAAGa,KAAK,QAAQb,UAAU,eAC1B,yBAAKA,UAAU,gBAAf,SAGA,yBAAKA,UAAU,iBAAf,UAGA,yBAAKA,UAAU,iBAAf,eAGA,yBAAKA,UAAU,iBAAf,WAGA,yBAAKA,UAAU,iBAAf,aCJGgB,EAbE,WACb,OACI,yBAAKhB,UAAU,YACX,uBAAGa,KAAK,kBACR,yBAAKb,UAAU,mBAAf,YACA,yBAAKA,UAAU,gBAAf,cACA,yBAAKA,UAAU,gBAAf,cACA,yBAAKA,UAAU,gBAAf,cACA,yBAAKA,UAAU,gBAAf,gBCWGiB,EAnBC,WACZ,OAEI,yBAAKjB,UAAU,WACX,uBAAGa,KAAK,UAAUb,UAAU,iBAC5B,yBAAKA,UAAU,kBAAf,WAGA,yBAAKA,UAAU,iBAAf,gBAGA,yBAAKA,UAAU,iBAAf,kBCSGkB,MAdf,WACE,OACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,MACA,8BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,SCJYmB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.33f26bd7.chunk.js","sourcesContent":["import React from 'react';\n\nconst Navbar = () => {\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light menu-fixed\">\n        <a className=\"navbar-brand\" href=\"#\">Wenjie</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\"\n          aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#home\">Home</a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#about\">About</a>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a className=\"nav-link dropdown-toggle\" href=\"#projects\" id=\"navbarDropdownMenuLink\" role=\"button\"\n                data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                Projects\n                    </a>\n              <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuLink\">\n                <a className=\"dropdown-item\" href=\"#\">Action</a>\n                <a className=\"dropdown-item\" href=\"#\">Another action</a>\n                <a className=\"dropdown-item\" href=\"#\">Something else here</a>\n              </div>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#contact\">Contact Me</a>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  )\n}\n\nexport default Navbar;","import React from 'react';\n\nconst Home = () => {\n    return (\n        <div className=\"home\">\n            <div className=\"home--main\">\n                <a name=\"home\"></a>\n                <h1 className=\"home--primary\">\n                    Hey There, I'm Wenjie Li.\n                </h1>\n                <section className=\"home--secondary\">\n                    based in San Francisco, CA.\n                </section>\n                <h1 className=\"home--primary\">\n                    Just Another Web Developer.\n                </h1>\n                <section className=\"home--secondary\">\n                    Experienced In Front-End and Back-end.\n                </section>\n                <h1 className=\"home--primary\">\n                    And A Big Fan Of Soccer.\n                </h1>\n                <section className=\"home--secondary\">\n                    Yes, Man Utd!\n                </section>\n                <a href=\"#about\" className=\"btn btn-primary btn-lg\" role=\"button\" aria-pressed=\"true\">View my work</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Home;\n\n","import React from 'react';\n\nconst About = () => {\n    return (\n\n        <div className=\"about\">\n            <a name=\"about\" className=\"about--tag\"></a>\n            <div className=\"about--title\">\n                About\n            </div>\n            <div className=\"about--avatar\">\n                avatar\n            </div>\n            <div className=\"about--skills\">\n                skill icons\n            </div>\n            <div className=\"about--intro1\">\n                intro 1\n            </div>\n            <div className=\"about--intro2\">\n                intro 2\n            </div>\n        </div>\n    )\n\n}\n\nexport default About;\n\n","import React from 'react';\n\nconst Projects = () => {\n    return (\n        <div className=\"projects\">\n            <a name=\"projects--tag\"></a>\n            <div className=\"projects--title\">Projects</div>\n            <div className=\"projects--p4\">projects 4</div>\n            <div className=\"projects--p2\">projects 2</div>\n            <div className=\"projects--p3\">projects 3</div>\n            <div className=\"projects--p1\">projects 1</div>\n        </div>\n    )\n}\n\nexport default Projects;\n\n","import React from 'react';\n\nconst Contact = () => {\n    return (\n\n        <div className=\"contact\">\n            <a name=\"contact\" className=\"contact--tag\"></a>\n            <div className=\"contact--title\">\n                contact\n            </div>\n            <div className=\"contact--form\">\n                contact form\n            </div>\n            <div className=\"contact--find\">\n                find me here\n            </div>\n        </div>\n    )\n\n}\n\nexport default Contact;\n\n","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport About from './components/About';\nimport Projects from './components/Projects';\nimport Contact from './components/Contact';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <main>\n        <Home />\n        <About />\n        <Projects />\n        <Contact />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}